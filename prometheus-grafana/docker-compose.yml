version: '3.8'
services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-admin-api'
    volumes:
      - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      #- ./config/alertrule.yml:/etc/prometheus/alertrule.yml:ro  # 읽기 전용 추가
      - prometheus-data:/prometheus
    ports:
      - 9090:9090
    networks:
      - prometheus-net

  prometheus-alertmanager:
    image: prom/alertmanager:latest
    container_name: prometheus-alertmanager
    restart: unless-stopped
    environment:
      - SLACK_API_URL=${SLACK_API_URL}
      - SLACK_API_CHANNEL=${SLACK_API_CHANNEL}
    volumes:
      - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./config/alertmanager_templates:/usr/share/prometheus/alertmanager
    ports:
      - 9094:9094
    networks:
      - prometheus-net

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - prometheus-net

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   container_name: cadvisor
  #   restart: unless-stopped
  #   privileged: true
  #   volumes:
  #     - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:ro
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #     - /dev/disk/:/dev/disk:ro
  #     - /dev/kmsg:/dev/kmsg
  #   #ports:
  #   #  - 8090:8080
  #   networks:
  #     - prometheus-net

networks:
  prometheus-net:
    name: prometheus-net
    driver: bridge

volumes:
  prometheus-data:
    name: prometheus-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./prometheus-data
  grafana-data:
    name: grafana-data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./grafana-data
